<style>
/* ${bgColor} #e0e0e0 ;${bgImage}*/
.navigatorLeftCSS {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 12px 宋体; 
	COLOR: #333333; PADDING-TOP: 0px; 
	/*background-color: ${bgColor};*/
	/*background-image: url("${bgImage}");*/
	width:100;leftmargin:0; topmargin:0
}
/*${parentBgColor} ${childBgColor}*/
.navigatorLeftCSS.parenttable td {border-bottom:1px solid #fff;text-align:left;background-color:${parentBgColor};}
.navigatorLeftCSS.leftsubtable td {border-bottom:0px solid #D6D3CE;border-right:0px solid #D6D3CE;text-align:left;background-color:${childBgColor};}

.navigatorLeftCSS.lbg01 {
	/*BACKGROUND-COLOR: ${bgColor};*/
	/*background-image: url("${bgImage}");*/
}
.navigatorLeftCSS.lefttitle01 {
	FONT-WEIGHT: bold; FONT-SIZE: 12px; COLOR: #583429; PADDING-TOP: 2px; FONT-FAMILY: "宋体"
}
.navigatorLeftCSS.treebg01 {
	PADDING-LEFT: 15px; PADDING-TOP: 3px; BACKGROUND-COLOR: #ffffff
}
.navigatorLeftCSS TABLE {
	FONT: 12px 宋体; COLOR: #333333
}
.navigatorLeftCSS TD {
	FONT: 12px 宋体; COLOR: #333333
}
.navigatorLeftCSS A:link {
	FONT-SIZE: 12px; COLOR: #000000; TEXT-DECORATION: none
}
.navigatorLeftCSS A:visited {
	FONT-SIZE: 12px; COLOR: #000000; TEXT-DECORATION: none
}
.navigatorLeftCSS A:active {
	FONT-SIZE: 12px; COLOR: #800080; TEXT-DECORATION: none
}
.navigatorLeftCSS A:hover {
	FONT-SIZE: 12px; COLOR: #ff0000; TEXT-DECORATION: none;
}

</style>
<script language="javascript">
<!--

function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_showHideLayers() { //v6.0
  var i,p,v,obj,args=MM_showHideLayers.arguments;
  for (i=0; i<(args.length-2); i+=3) if ((obj=MM_findObj(args[i]))!=null) { v=args[i+2];
    if (obj.style) { obj=obj.style; v=(v=='show')?'visible':(v=='hide')?'hidden':v; }
    obj.visibility=v; }
}

function defaul_home(){
this.home.style.behavior="url(#default#homepage)";this.home.setHomePage("http://www.gz.gov.cn/");
}

scores = new Array(20);
var numTotal=0;
NS4 = (document.layers) ? 1 : 0;
IE4 = (document.all) ? 1 : 0;
ver4 = (NS4 || IE4) ? 1 : 0;
if (ver4) {
	with (document) {
		write("<STYLE TYPE='text/css'>");
		if (NS4) {
			write(".parent {position:absolute; visibility:visible}");
			write(".child {position:absolute; visibility:visible}");
			write(".regular {position:absolute; visibility:visible}")
		} else {
			write(".child {display:none}")
		}
		write("</STYLE>");
	}
}

function getIndex(el) {
	ind = null;
	for (i=0; i<document.layers.length; i++) {
		whichEl = document.layers[i];
		if (whichEl.id == el) {
			ind = i;
			break;
		}
	}
	return ind;
}

function arrange() {
	nextY = document.layers[firstInd].pageY +document.layers[firstInd].document.height;
	for (i=firstInd+1; i<document.layers.length; i++) {
		whichEl = document.layers[i];
		if (whichEl.visibility != "hide") {
			whichEl.pageY = nextY;
			nextY += whichEl.document.height;
		}

	}
}

function initIt(){

	if (!ver4) return;
	if (IE4) {
		for(i=1;i<=numTotal;i++){
			whichEl = eval(scores[i] + "Child");
				whichEl.style.display = "none";
			}
		}
else {
		for(i=1;i<=numTotal;i++){
			whichEl = eval("document." + scores[i] + "Child");
				whichEl.visibility = "hide";

		arrange();
	}
}
}

function expandIt(el) {
	if (!ver4) return;
	if (IE4) {
		whichEl1 = eval(el + "Child");
		for(i=1;i<=numTotal;i++){
			whichEl = eval(scores[i] + "Child");
			if(whichEl!=whichEl1) {
				whichEl.style.display = "none";
			}
		}
		whichEl1 = eval(el + "Child");
		if (whichEl1.style.display == "none") {
			whichEl1.style.display = "block";
			setCookie("nodeName",el);
		} else {
			whichEl1.style.display = "none";
			delCookie("nodeName");
		}
	} else {
		whichEl = eval("document." + el + "Child");
		for(i=1;i<=numTotal;i++){
			whichEl = eval("document." + scores[i] + "Child");
			if(whichEl!=whichEl1) {
				whichEl.visibility = "hide";
			}
		}
		if (whichEl.visibility == "hide") {
			whichEl.visibility = "show";
		} else {
			whichEl.visibility = "hide";			
		}
		arrange();
	}
}

function setCookie(name,value) {
	var Days = 30;
	var exp  = new Date();    
	exp.setTime(exp.getTime() + Days*24*60*60*1000);
	document.cookie = name + "="+ escape (value) + ";expires=" + exp.toGMTString();
}	  
function delCookie(name){	      
	var exp = new Date();
	exp.setTime(exp.getTime() - 1);			
	var cval=getCookie(name);
	if(cval!=null) document.cookie= name + "="+cval+";expires="+exp.toGMTString();
}
function getCookie(name) {
    var arr,reg=new RegExp("(^| )"+name+"=([^;]*)(;|$)");
    if(arr=document.cookie.match(reg)) {
	    return unescape(arr[2]);
	}
}

function modikebyTG(el) {
if (!ver4) return;
	if (IE4) {
		whichEl1 = eval(el + "Child");
		for(i=1;i<=numTotal;i++){
			whichEl = eval(scores[i] + "Child");
			if(whichEl!=whichEl1) {
				whichEl.style.display = "none";
			}
		}
		whichEl1 = eval(el + "Child");
		whichEl1.style.display ="block";

	} else {
		whichEl = eval("document." + el + "Child");
		for(i=1;i<=numTotal;i++){
			whichEl = eval("document." + scores[i] + "Child");
			if(whichEl!=whichEl1) {
				whichEl.visibility = "hide";
			}
		}
	  whichEl.visibility = "hide";
		arrange();
	}
    }
    
    function MM_goToURL() { //v3.0
	  var i, args=MM_goToURL.arguments; document.MM_returnValue = false;
	  for (i=0; i<(args.length-1); i+=2) eval(args[i]+".location='"+args[i+1]+"'");
	}
-->
</script>