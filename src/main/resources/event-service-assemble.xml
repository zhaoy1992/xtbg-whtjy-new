<?xml version="1.0" encoding='gb2312'?>

<manager-config>
	<properties>
		
		<!-- 定义可以进行远程通讯的网络节点结合，默认为all -->
		<!-- <property name="event.static-networks" value="172.16.17.254:1185"/> -->
		
		<!-- 
			是否启用远程事件开关，如果没有启用远程事件或者系统的rpc服务没有开启，事件的处理情况如下：
			本地事件发给当前服务器的本地事件监听器
			远程事件发给当前服务器的本地远程事件监听器、远程事件监听器
			本地远程事件发给当前服务器的本地事件监听器、本地远程事件监听器、远程事件监听器
			
			
			如果启用远程事件和开启rpc服务的情况下：
			本地事件发给当前服务器的本地事件监听器
			远程事件发给所有服务器的本地远程事件监听器、远程事件监听器
			本地远程事件发给当前服务器的本地事件监听器、所有服务器的本地远程事件监听器、所有服务器的远程事件监听器
		 -->
		<property name="remoteevent.enabled" value="true"/>
		<!--  
			/**
			 * 指定缺省消息传播类型：
			 * 本地传播(Event.LOCAL)
			 * 远程传播(Event.REMOTE)
			 * 本地远程传播 (Event.REMOTELOCAL)
			 */
		-->
		<property name="event.destinction.type" value="Event.REMOTELOCAL"/>
		
		<!-- 
			最大等待5次，每次延时长10%
		 -->
		<property name="event.threadpool">
			<map>
				<property name="corePoolSize" value="5"/>
				<property name="maximumPoolSize" value="10"/>
				<!-- 
				TimeUnit.SECONDS
				TimeUnit.MICROSECONDS
				TimeUnit.MILLISECONDS
				TimeUnit.NANOSECONDS
				时间单位适用于以下参数：
				keepAliveTime
				waitTime
				delayTime（当delayTime为整数时间而不是百分比时有效）
				 -->
				<property name="timeUnit" value="TimeUnit.SECONDS"/>
				<property name="keepAliveTime" value="40"/>		
				<!-- 
				/**
		             
		             * LinkedBlockingQueue
		             * PriorityBlockingQueue
		             * ArrayBlockingQueue
		             * SynchronousQueue
		             */
				 -->
				<property name="blockingQueueType" value="ArrayBlockingQueue"/>		
				<property name="blockingQueue" value="10"/>
				
				<!-- 
				RejectedExecutionHandler
				必须实现java.util.concurrent.RejectedExecutionHandler接口
				目前系统提供以下缺省实现：
				org.frameworkset.thread.WaitPolicy  循环等待event.threadpool.waitTime指定的时间，单位为秒
				java.util.concurrent.ThreadPoolExecutor.DiscardPolicy 直接丢弃任务，不抛出异常
				java.util.concurrent.ThreadPoolExecutor.AbortPolicy 直接丢弃任务，抛出异常RejectedExecutionException
				java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy 直接运行
				java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy 放入队列，将最老的任务删除
				 -->
				<property name="rejectedExecutionHandler" value="org.frameworkset.thread.WaitPolicy"/>
				<!-- 
					以下参数只有在配置的org.frameworkset.thread.WaitPolicy策略时才需要配置
				 -->
				<property name="waitTime" value="1"/>
				<property name="delayTime" value="10%"/>
				<property name="maxWaits" value="2"/>
				<property name="waitFailHandler" value="org.frameworkset.event.EventHandle$WaiterFailedHandler"/>
				
			</map>
		</property>
	</properties>
	
	<!-- 
		远程事件认证信息配置
		用户账号
		用户口令
	 -->
	<property name="event.user" value="admin"/>
	<property name="event.password" value="123456"/>
	
	<property name="event.block.queue.size" value="200"/>
	
	<!--
			事件管理远程服务
	-->
	<property name="event.serivce" class="org.frameworkset.remote.EventRemoteServiceImpl"  singlable="true" />
</manager-config>